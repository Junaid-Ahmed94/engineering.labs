name: "Deploy model to TorchServe"

on:
  release:
    types: [published]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      GCP_CREDS_JSON_BASE64: ${{ secrets.GCP_CREDS_JSON_BASE64 }}
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2
      - name: Get Tag name
        uses: little-core-labs/get-git-tag@v3.0.1
        id: tagName
        with:
          tagRegex: "BertModel-(\\d+).*"
      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Configure GCP access
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: engineeringlab
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: info
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ steps.tagName.outputs.tag }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Configure Docker
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: engineeringlab
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: auth configure-docker gcr.io --quiet
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./Lab1_Operationalizing_Pytorch_with_Mlflow/src/bert-classifier
          file: ./Lab1_Operationalizing_Pytorch_with_Mlflow/src/bert-classifier/Dockerfile-torchserve
          push: true
          tags: gcr.io/engineeringlab/torchserve:${{ steps.tagName.outputs.tag }}
          build-args: |
            GCP_CREDS_JSON_BASE64=${{ secrets.GCP_CREDS_JSON_BASE64 }}
            MODEL_NAME=/BertModel/${{ steps.tagName.outputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Deploy to Google Cloud Run
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: engineeringlab
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: |
            run deploy news-bert-service --image gcr.io/engineeringlab/torchserve:${{ steps.tagName.outputs.tag }} --platform managed --port 8080 --allow-unauthenticated --memory 2G --cpu 2 --region southamerica-east1
