name: "Run training"

# Trigger the workflow on push for the master branch and on any PR
on:
  push:
    branches: [master]
  pull_request:

jobs:
  train:
    name: Train
    runs-on: ubuntu-latest
    env:
      GCP_CREDS_JSON_BASE64: ${{ secrets.GCP_CREDS_JSON_BASE64 }}
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2
      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Configure GCP access
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: engineeringlab
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: info
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Configure Docker
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: engineeringlab
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: auth configure-docker gcr.io --quiet
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./Lab1_Operationalizing_Pytorch_with_Mlflow/src/bert-classifier
          file: ./Lab1_Operationalizing_Pytorch_with_Mlflow/src/bert-classifier/Dockerfile-trainer
          push: true
          tags: gcr.io/engineeringlab/trainer:${{ github.sha }}
          build-args: |
            GCP_CREDS_JSON_BASE64=${{ secrets.GCP_CREDS_JSON_BASE64 }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Start training node
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: engineeringlab
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: |
            compute instances start --zone us-east1-b compute-1
      - name: Sleep for 15 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '15s'
      - name: Run proper training
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: engineeringlab
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          MLFLOW_TRACKING_URI: http://35.185.111.8:5000
        with:
          args: |
            compute ssh --zone us-east1-b compute-1 -- 'TMPDIR=$(mktemp -d /tmp/model.XXXXXXXXXX) cd $TMPDIR && git clone https://github.com/mlops-labs-team1/engineering.labs.git && cd engineering.labs/Lab1_Operationalizing_Pytorch_with_Mlflow/src/bert-classifier/ && git checkout an/gh-actions && sed -i -e s/##IMAGE##/${{ github.sha }}/ MLproject && cat MLproject && JSON_FILE=${{ github.sha }}.json MLFLOW_TRACKING_URI='${MLFLOW_TRACKING_URI}' mlflow run --no-conda -P json_dump=${TMPDIR}/${JSON_FILE} .'
      - name: Stop training node
        uses: actions-hub/gcloud@master
        if: ${{ always() }}
        env:
          PROJECT_ID: engineeringlab
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: |
            compute instances stop --zone us-east1-b compute-1
