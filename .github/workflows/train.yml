name: "Run training"

# Trigger the workflow on push for the master branch
on:
  push:
    branches: [master]
  pull_request:

jobs:
  train:
    name: Train
    runs-on: ubuntu-latest
    env:
      GCP_CREDS_JSON_BASE64: ${{ secrets.GCP_CREDS_JSON_BASE64 }}
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2
      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      # - name: Configure GCP access
      #   uses: google-github-actions/setup-gcloud@master
      #   with:
      #     project_id: $ {{ secrets.GCP_PROJECT_NAME }}
      #     service_account_key: ${{ secrets.GCP_CREDS_JSON_BASE64 }}
      #     export_default_credentials: true
      - name: Configure GCP access
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: engineeringlab
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: info
      # DockerHub integration via actions
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./Lab1_Operationalizing_Pytorch_with_Mlflow/src/bert-classifier
          file: ./Lab1_Operationalizing_Pytorch_with_Mlflow/src/bert-classifier/Dockerfile
          tags: englabsteam1/trainer:latest
          build-args: |
            GCP_CREDS_JSON_BASE64=${{ secrets.GCP_CREDS_JSON_BASE64 }}
      # Alternative manual build (for comparison, only one branch will be left)
      - name: Build trainer image
        run: |
          cd Lab1_Operationalizing_Pytorch_with_Mlflow/src/bert-classifier && \
          docker build -t engineering-labs1/trainer \
          --build-arg GCP_CREDS_JSON_BASE64="${GCP_CREDS_JSON_BASE64}" \
          -f Dockerfile-trainer .
      - name: Deploy trainer
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: $ {{ secrets.GCP_PROJECT_NAME }}
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: |
            compute ssh --zone us-east1-b compute-1 -- \
            "cd engineering.labs/Lab1_Operationalizing_Pytorch_with_Mlflow/src/bert-classifier/ && GOOGLE_APPLICATION_CREDENTIALS=~/engineeringlab.json MLFLOW_TRACKING_URI=http://35.185.111.8:500 mlflow run . -P max_epochs=1"
