name: "Run training"

# Trigger the workflow on push for the master branch and on any PR
on:
  push:
    branches: [master]
  pull_request:

jobs:
  train:
    name: Train
    runs-on: ubuntu-latest
    env:
      GCP_CREDS_JSON_BASE64: ${{ secrets.GCP_CREDS_JSON_BASE64 }}
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2
      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Configure GCP access
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: engineeringlab
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: info
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: RafikFarhad/push-to-gcr-github-action@v3.0.2
        with:
          gcloud_service_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          registry: gcr.io
          project_id: engineeringlab
          image_name: trainer
          context: ./Lab1_Operationalizing_Pytorch_with_Mlflow/src/bert-classifier
          dockerfile: ./Lab1_Operationalizing_Pytorch_with_Mlflow/src/bert-classifier/Dockerfile-trainer
          image_tag: ${{ github.sha }}
          build_args: GCP_CREDS_JSON_BASE64=${{ secrets.GCP_CREDS_JSON_BASE64 }}
      - name: Start training node
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: engineeringlab
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: |
            compute instances start --zone us-east1-b compute-1
      - name: Sleep for 15 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '15'
      - name: Run proper training
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: engineeringlab
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          MLFLOW_TRACKING_URI: http://35.185.111.8:5000
        with:
          args: |
            compute ssh --zone us-east1-b compute-1 -- 'TMPDIR=$(mktemp -d /tmp/model.XXXXXXXXXX) cd $TMPDIR && git clone https://github.com/mlops-labs-team1/engineering.labs.git && cd engineering.labs/Lab1_Operationalizing_Pytorch_with_Mlflow/src/bert-classifier/ && git checkout an/gh-actions && sed -i -e s/##IMAGE##/${{ github.sha }}/ MLproject && cat MLproject && MLFLOW_TRACKING_URI='${MLFLOW_TRACKING_URI}' mlflow run --no-conda .'
      - name: Stop training node
        uses: actions-hub/gcloud@master
        if: ${{ always() }}
        env:
          PROJECT_ID: engineeringlab
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          args: |
            compute instances stop --zone us-east1-b compute-1
